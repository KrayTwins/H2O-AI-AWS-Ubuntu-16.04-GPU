## login into Ubuntu 16.04 EC2 instance
ssh -i <key_pair>.pem http://ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com
sudo su
## Prepare for installation of Nvidia Tesla K80 GPU Ubuntu 16.04 drivers
apt-get update
apt-get upgrade -y linux-aws
reboot

## login to rebooted instance
ssh -i <key_pair>.pem http://ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com

## install gcc+ and make
apt-get install -y gcc make linux-headers-$(uname -r)

## A common issue when installing the Nvidia drivers, is that 'gcc' and 'make' are not in path, check if they are installed
# gcc (Ubuntu 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609
# Copyright (C) 2015 Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.  There is NO
# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

gcc --version
make --version

## Install drivers for Nvidia Tesla K80 GPU Ubuntu 16.04
## Download Nvidia for Tesla 80 Ubuntu 16.04
wget http://us.download.nvidia.com/XFree86/Linux-x86_64/367.106/NVIDIA-Linux-x86_64-367.106.run
/bin/bash ./NVIDIA-Linux-x86_64-367.106.run
reboot

## login to rebooted instance
ssh -i <key_pair>.pem http://ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com
sudo su

## Check Nvidia Tesla K80 GPU driver for Ubuntu 16.04 is installed
## ==============NVSMI LOG==============
##
## Timestamp                           : Mon Apr  9 12:25:59 2018
## Driver Version                      : 367.106
##
## Attached GPUs                       : 1
## GPU 0000:00:1E.0
##    Product Name                    : Tesla K80
##    Product Brand                   : Tesla

nvidia-smi -q | head

## Install docker-ce to run the H2O Driverless AI container (note use the 'docker run' commend for CPU and 'nvidea-docker run' GPU Compute)  
mkdir dai_rel_1.0.30
cd dai_rel_1.0.30/
wget https://s3-us-west-2.amazonaws.com/h2o-internal-release/docker/driverless-ai-docker-runtime-latest-release.gz
mkdir data log license tmp

apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu artful stable"
apt update
apt install docker-ce

## Check docker is running with, note the 59.97GiB memory and 4CPU's 
docker info

## Install 'nvidea-docker' package
wget -P /tmp https://github.com/NVIDIA/nvidia-docker/releases/download/v1.0.1/nvidia-docker_1.0.1-1_amd64.deb
dpkg -i /tmp/nvidia-docker*.deb
rm /tmp/nvidia-docker*.deb

## Inside the dai_rel_1.0.30, load the H2O Driverless AI into docker as an image
docker load < driverless-ai-docker-runtime-latest-release.gz

## ---------------------------------
## Welcome to H2O.ai's Driverless AI
## ---------------------------------
##     version: 1.0.30
##
## - Put data in the volume mounted at /data
## - Logs are written to the volume mounted at /log/20180409-124351
## - Connect to Driverless AI on port 12345 inside the container
## - Connect to Jupyter notebook on port 8888 inside the container
## Copy http://ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com:12345 to you browser

nvidia-docker run \
    --rm \
    -u `id -u`:`id -g` \
    -p 12345:12345 \
    -p 54321:54321 \
    -p 8888:8888 \
    -v `pwd`/data:/data \
    -v `pwd`/log:/log \
    -v `pwd`/license:/license \
    -v `pwd`/tmp:/tmp \
    opsh2oai/h2oai-runtime






